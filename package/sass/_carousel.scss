@use "sass:color";

.#{$carouselClassname} {
    @include unselectable();
    width: 100%;
    overflow: hidden;
    // margin-top: $carouselItemHoverTranslateUpAmount;

    &__dots {
        @include displayFlexCenter();

        &>div,
        &>svg {
            @include displayFlexCenter();
            --opacity: #{$carouselDotOpacity};
            height: 24px;
            width: 16px;
            background-color: transparent;

            &>div {
                background-color: rgba($itemViewerBackgroundColor, var(--opacity));
                border-radius: 100%;
            }

            & use {
                fill: $itemViewerBackgroundColor;
                opacity: var(--opacity);
            }

            &:not(.#{$carouselClassname}__dots-current):hover {
                cursor: pointer;

                & * {
                    --opacity: #{$carouselDotHoverOpacity};
                    opacity: $carouselDotHoverOpacity !important;
                }
            }
        }
    }

    &__item {
        margin: $carouselItemHoverTranslateUpAmount 0 0 0;
        position: relative;
        border-radius: 8px;
        overflow: hidden;
        transition:
            border-radius $carouselAnimationDuration ease,
            box-shadow $carouselAnimationDuration ease,
            transform $carouselAnimationDuration ease;

        &-container {
            user-select: none;
            width: 100vw;
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;

            // &:hover .#{$carouselClassname}__item-viewer-toolbar {
                // @extend %visible;
            // }

            &--no-toolbar {
                & .#{$carouselClassname}__item-viewer-toolbar, & .#{$carouselClassname}__video-screenshot-viewer {
                    @extend %hidden;

                    @include respond(mobile) {
                        pointer-events: all !important;
                        opacity: 1 !important;
                    }
                }

                & .#{$carouselClassname}__item-viewer-shortcut-indicator {
                    pointer-events: none !important;
                }
            }

            & img {
                z-index: $zIndexItemViewerImage;
                width: 100vw;
                max-height: 100vh;
            }
        }

        &-thumbnail {
            object-fit: cover;
            object-position: top;
            height: 100%;
            width: 100%;
        }

        &>div {
            @include positionAbsolute($top: auto);
            transition: bottom $carouselAnimationDuration ease;
            text-align: center;
            font-weight: 700;
            cursor: pointer;
        }

        &:hover {
            transform: translateY(-$carouselItemHoverTranslateUpAmount);
            box-shadow: 0 $carouselItemHoverTranslateUpAmount 0.4rem 0rem rgba(black, .5);

            &>div {
                bottom: 0 !important;
            }
        }
          
        & img:hover {
            cursor: pointer;
        }
    }

    &__items {
        display: flex;
        width: 10000000vw;
        transition: transform $carouselAnimationDuration ease;
        backface-visibility: hidden;
        
        &.#{$classname__grabbing} {
            cursor: grabbing !important;
            & img {
                cursor: grabbing !important;
            }
        }
    }

    &__item-viewer {
        //add this if you want toolbar to stick to the video
        // flex-direction: column;
        display: none;
        background-color: $itemViewerBackgroundColor;
        transition:
            opacity $carouselAnimationDuration ease;

        &-button {
            @include button();
            fill: $itemViewerButtonColor;
            stroke: $itemViewerBackgroundColor;
            stroke-opacity: .15;
            stroke-width: 2px;
            display: flex;

            &-inverse {
                @include button--inverse;

                & * {
                    @include button--inverse;
                }
            }
        }

        &-shortcut-indicator {
            position: relative;

            & > div:nth-child(1) {
                z-index: $zIndexShortcutPopup;
                padding: 4px 8px;
                position: absolute;
                left: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                border-radius: 4px;
                font-size: 12px;
                white-space: nowrap;
            }
        }

        &-toolbar {
            z-index: $zIndexToolbar;
            transition:
                transform $carouselAnimationDuration ease,
                opacity $carouselAnimationDuration ease;

            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: space-between;
            padding: calc($itemViewerToolbarMarginHorizontal / 2) $itemViewerToolbarMarginHorizontal;
            background: $itemViewerBackgroundColor;
            /*this color is displayed if browser can't read the below properties*/
            background: -moz-linear-gradient(180deg, #ffffff00 0%, #000000ff 100%);
            background: -webkit-linear-gradient(180deg, #ffffff00 0%, #000000ff 100%);
            background: linear-gradient(180deg, #ffffff00 0%, #000000ff 100%);
            filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#8a96e6", endColorstr="#8a96e6", GradientType=1);
            @include positionAbsolute($top: auto);

            &-container {
                width: 100%;
                display: flex;
                align-items: center;
                justify-content: space-between;
                column-gap: $itemViewerToolbarColumnGap;

                &>* {
                    display: flex;
                    align-items: center;
                    justify-content: space-between;
                    column-gap: $itemViewerToolbarColumnGap;
                }
            }

            &-preview {
                @include positionAbsolute(
                    $left: auto,
                    $bottom: auto
                );
                display: flex;
                align-items: flex-start;
                justify-content: space-between;
                font-size: $carouselFontSize;
                color: $itemViewerButtonColor;
                overflow: hidden;

                &-image {
                    &-container {
                        height: calc(100% - 0px);
                        position: relative;

                        & img {
                            position: relative;
                            z-index: $zShortcutPreviewImage;
                            width: 100%;
                            height: 100%;
                            object-fit: cover;
                            object-position: left;
                        }

                        & .#{$carouselClassname}__loading-container {
                            row-gap: 0;
                        }
                    }

                    &-description {
                        padding: calc($itemViewerToolbarMarginHorizontal / 2);
                        text-align: center;

                        & > p {
                            @include maxTextLineCount();
                        }
                    }
                }

                @include respond(mobile) {
                    display: none;
                }
            }

            &-progress {
                appearance: none;
                border: none;
                z-index: $zIndexProgressBar;
                &:not(.grabbing):hover {
                    cursor: pointer;
                }
            }
            
            &-text {
                justify-content: flex-start;
                width: 100%;
            }
        }
    }

    &__navigation {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    &__video {
        width: 100vw;
        object-fit: contain;
        max-height: 100vh;

        &-screenshot-viewer {
            & > div > div {
                @include maxTextLineCount(1);
            }
        }
    }

    &__modal {
        &-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        & p {
            padding-right: $itemViewerModalParagraphPaddingRight;
        }

        &-custom {
            & .#{$carouselClassname}__item-viewer-button {
                @include positionAbsolute($right: var(--#{$modalCustomButtonRightString}),
                    $top: var(--#{$modalCustomButtonTopString}),
                    $left: auto,
                    $bottom: auto,
                );
                @include closeButton;
            }
        }

        &::-webkit-scrollbar {
            &-track {
                background-color: var(--#{$modalScrollbarBackgroundColor});
            }
            &-thumb {
                background-color: var(--#{$modalScrollbarForegroundColor});
            }
        }

        &-minimized {
            @include increaseOpacityOnHover(var(--#{$modalMinimzedOpacity}), 1);
        }
    }

    &--d-none {
        display: none;
    }

    &--hidden {
        @extend %hidden;
    }

    &--visible {
        @extend %visible;
    }
}

body {
    &.#{$classname__grabbing} {
        cursor: grabbing !important;
    }
}