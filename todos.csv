figure out how to allow no types for sections when string case and first item 
figure out how to allow no types for sections when number case and last item 

Readme:
  -create a section called Features
    --per item customization
      ---videos
        ---sections
          ---using numbers
          ---using strings
        ---optimizations
          ---creating a low-res (480p) version of the video
      ---all items
        ---optional modal
          ---using JSX
          ---using built-in section builder (use an example with codeSection)


Before Publishing
  -use @default in types instead of `Default is here`.
  -remove styling.container.margin and padding since that should be set via options.container.style?
  -make 0 be default padding top for carousel?
  -add .mdx files for each story file (google), with details on how to test (e.g. dynamic layout)
  -write jest tests for utils and other functions?

Enhancements
  -add logic to only render the items on the current page + next page?
  -add volume button for videos?
  -add text sizing for modal header and item-viewer-toolbar-container (the width of the spans will need to adjust accordingly too) so that mobile looks more like fullscreen (a fixed ratio with a min of 8 or something?)
  -replace all inline styles with classname variables (heavy lift)?
  -check how fullscreen looks on phone (should rotate)
  -add a single option for full width single item per page with only circular buttons
  -make CarouselElementCustomization.style a CarouselElementValue?
  -when done with buttonSize stuff, clean up css styles
  -how to intelligently add themes or default colors?

  -add a colors.scss and pick an actual color design and refactor all colors to use it (use custom properties too to make customizable?); name `color1`, `color2`, etc?
  -figure out how to memoize options and styling logic (e.g. when playing a video, the styling getters run each time)
  -add lazy loading of items (only render the items up to the furtherst currentPage)?
  -update all custom test case
  -figure out how to test and implement accessability
  -verify all of the progress bar customization options still work when done 
  -restructure the options object to make things like the progressbar options more accesible (currently in styling.toolbar.progressBar)?  Mabye have an options.elements where all elements are listed?

Known Issues:
  -specifying a border string value using millimeters or rem may result in the current item's size being incorrectly calculated, especially when using floats
  -having more than 10 instance on the same page can cause issues (need to benchmark this)?
  -small gap at bottom of toolbar (only appears a smaller viewports around 845px)
  -changing items with mid-tier and below setting is sluggish
  -CarouselElementValue only updates when CarouselContent re-renders; if dynamic spacing is on, then re-renders occur much more often
  -cursor only changes properly after going into full screen once
